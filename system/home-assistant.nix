{ pkgs, ... }:

{
  virtualisation.oci-containers.containers.home-assistant = {
    volumes = [ "/home/juniper/home-assistant:/config" ];
    environment.TZ = "Europe/Berlin";
    image = "ghcr.io/home-assistant/home-assistant:2022.12";
    extraOptions = [
      "--network=host"
    ];
  };

  networking.firewall.allowedTCPPorts = [
    8123 # Home assistant web UI
    1883 # Mosquitto
  ];

  environment.systemPackages = with pkgs; [
    sqlite-interactive
    # For testing with mosquitto_pub and for generating password files with mosquitto_passwd
    mosquitto
  ];

  services.mosquitto = {
    enable = true;
    logType = [ "all" ];
    listeners = [
      {
        port = 1883;
        users = {
          esp-water-meter = {
            # Hashes generated by using mosquitto_passwd and extracting the second field
            # See NixOS options doc
            hashedPassword = "$7$101$39mT4ByzZgkt+V5h$0icwVVmOgazrzz11AqXC1v2xhWd08/PzMRzbYjNLK2Hv85LI4qb7thFm/rqwdBGGHUY5MAijHkLnUZDsueM+dw==";
            acl = [
              "readwrite watermeter/#"
              "readwrite homeassistant/sensor/watermeter/#"
            ];
          };
          ha_user = {
            hashedPassword = "$7$101$eB9lWqPtXfPbUaaj$bgM475TrtqBhCJBCvdxs/SSUWme2W17qTQGxhRnJkyzRRSjH0vCLP7P0aucV6SHUO68N/L9veEVI/mO7k8WKtQ==";
            acl = [
              "read #"
              "readwrite homeassistant/#"
            ];
          };
        };
      }
    ];
  };

}
